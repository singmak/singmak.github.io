{"version":3,"file":"component---src-templates-blog-list-tsx-ac979c5f599c2fb3ac22.js","mappings":"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","sources":["webpack://singsdev/./node_modules/@mui/material/Card/cardClasses.js","webpack://singsdev/./node_modules/@mui/material/Card/Card.js","webpack://singsdev/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://singsdev/./node_modules/@mui/material/CardContent/CardContent.js","webpack://singsdev/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://singsdev/./node_modules/@mui/material/CardActions/CardActions.js","webpack://singsdev/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://singsdev/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://singsdev/./src/components/Blog.tsx","webpack://singsdev/./src/templates/blog-list.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import React, { useCallback } from 'react';\nimport { navigate } from 'gatsby';\nimport { AllMdxNodes, MdxNode } from '../types';\nimport { Card, CardContent, CardMedia, Grid, Typography, Chip, CardActions, Box } from '@mui/material';\nimport { Link } from 'gatsby-theme-material-ui';\n\nconst Tag = ({ tag }: { tag: string }) => {\n  const onTagClick = useCallback(() => {\n    navigate(`/tag/${tag}`);\n  }, [tag]);\n  return (\n    <Box key={tag} sx={{\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderBottom: '10px solid transparent',\n    }}>\n      <Chip label={tag} variant=\"outlined\" onClick={onTagClick}/>\n    </Box>\n  );\n};\n\nconst BlogListItem = ({ mdx }: { mdx: MdxNode }) => {\n  const meta = mdx?.frontmatter;\n  if (!meta) return null;\n  return (\n    <Grid item>\n      <Card elevation={0} sx={{\n        display: 'flex',\n        backgroundColor: '#fff',\n      }}>\n        <Box>\n          <CardContent>\n            <Link to={`/post${mdx.fields?.slug}`}>\n              <Typography variant=\"h5\" paragraph>\n                {meta.title}\n              </Typography>\n            </Link>\n            <Typography paragraph sx={{ fontSize: 12, lineHeight: 0 }}>\n              {meta.date}\n            </Typography>\n            <Typography variant='subtitle1' paragraph sx={{ marginBottom: 0 }}>\n              {meta.description}\n            </Typography>\n          </CardContent>\n          <CardActions sx={{ flexWrap: 'wrap', marginBottom: '-5px' }} disableSpacing>\n            {meta.tags.map((tag) => (\n              <Tag tag={tag} key={tag}/>\n            ))}\n          </CardActions>\n        </Box>\n        {meta.imageUrl ? <CardMedia image={meta.imageUrl} sx={{\n          width: 180,\n        }} /> : null}\n      </Card>\n    </Grid>\n  );\n};\n\nexport interface BlogProps {\n  data: AllMdxNodes;\n}\n\nexport const Blog = ({ data }: BlogProps) => {\n  return (\n    <Grid container direction=\"column\" rowSpacing={3}>\n      {\n        data.allMdx.nodes.map(node => (<BlogListItem mdx={node} key={node.id}/>))\n      }\n    </Grid>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport { Blog } from '../components/Blog';\nimport { AllMdxNodes } from '../types';\nimport { logPage } from '../analytics';\nimport PageWrapper from '../components/PageWrapper';\nimport { Container, Button } from '@mui/material';\nimport { Link } from 'gatsby-theme-material-ui';\n\nconst PAGE_DESCRIPTION = 'I am Sing Mak. This is my tech blog. I blog about NodeJS, React, AWS, DevOps, Android development, or anything I learned recently.';\n\n// for going to previous page or next page\nconst PaginationControl = ({\n  currentPage,\n  numberOfPages,\n}: {\n  currentPage: number;\n  numberOfPages: number;\n}) => {\n  return (\n    <Container sx={{ display: 'flex', justifyContent: 'space-between' }}>\n      <Link to={currentPage === 2 ? '/blog' : `/blog/${currentPage - 1}`} sx={{ textDecoration: 'none' }}>\n        <Button variant=\"contained\" color=\"primary\" disabled={currentPage === 1}>Previous</Button>\n      </Link>\n      <Link to={`/blog/${currentPage + 1}`} sx={{ textDecoration: 'none' }}>\n        <Button variant=\"contained\" color=\"primary\" disabled={currentPage === numberOfPages}>Next</Button>\n      </Link>\n    </Container>\n  );\n}\n\n\nconst BlogList = ({ data, pageContext }: PageProps<AllMdxNodes, {\n  numPages: number;\n  currentPage: number;\n}>) => {\n  useEffect(() => logPage('BlogList', 'blog-list'), []);\n  console.log(pageContext);\n  const { numPages, currentPage } = pageContext;\n  return (\n    <PageWrapper pageTitle=\"Blog\" description={PAGE_DESCRIPTION}>\n      <Container maxWidth=\"md\" sx={{ marginTop: 5, marginBottom: 5 }}>\n        <Blog data={data} />\n      </Container>\n      <Container maxWidth=\"md\" sx={{ marginBottom: 5 }}>\n        <PaginationControl numberOfPages={numPages} currentPage={currentPage}/>\n      </Container>\n    </PageWrapper>\n  );\n};\n\nexport const query = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMdx(sort: {frontmatter: {date: DESC}}, skip: $skip, limit: $limit) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          description\n          tags\n        }\n        id\n        fields {\n          slug\n        }\n      }\n    }\n  }`;\n\nexport default BlogList;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","display","alignItems","marginLeft","slots","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","image","src","style","indexOf","composedStyle","backgroundImage","role","Tag","_ref","tag","onTagClick","useCallback","navigate","React","Box","key","sx","borderLeft","borderRight","borderBottom","Chip","label","variant","onClick","BlogListItem","_ref2","_mdx$fields","mdx","meta","frontmatter","Grid","item","Card","backgroundColor","CardContent","Link","to","fields","slug","Typography","paragraph","title","fontSize","lineHeight","date","marginBottom","description","CardActions","flexWrap","tags","map","imageUrl","CardMedia","Blog","_ref3","data","container","direction","rowSpacing","allMdx","nodes","node","id","PaginationControl","currentPage","numberOfPages","Container","justifyContent","textDecoration","Button","color","disabled","pageContext","useEffect","logPage","console","log","numPages","PageWrapper","pageTitle","maxWidth","marginTop"],"sourceRoot":""}